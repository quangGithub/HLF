*Note: ssh minikube by docker:tcuser
1/ start minikube with 6 cpu and 8gb memory
	minikube stop
	minikube delete --all
	minikube config set memory 8192
	minikube config set cpus 6
	minikube start --driver=hyperv
	minikube ip


2/ create persistent volume and persistent volume claim
	cd 1.pv
	kubectl apply -f pv.yaml
	kubectl apply -f pvc.yaml
	kubectl apply -f pod.yaml
	
3/ access to task-pv-pod to mount folder
	cd ..
	kubectl exec -it task-pv-pod -- sh
	cd /usr/share/nginx/html
	touch 1.txt
	exit
    --> access to minikube and check the data must be synced
	
4/ copy all folder inside prerequsite foder to /v1 folder in minikube node
ssh docker@172.18.32.73
	ssh docker@172.18.32.73 password: tcuser
	cd /v1
	grant permission to docker user
	sudo chown -R docker:docker ../v1
	exit

	scp -r prerequsite/* docker@172.18.32.73:/v1 (password: tcuser)
	
	ssh docker@172.18.32.73 password: tcuser
	cd /v1
	ls -la 
	sudo chmod +x ../v1/scripts -R
	exit

5/ deploy ca
	ssh docker@172.18.32.73 password: tcuser
	cd /v1
	
	mkdir organizations
	cp -r fabric-ca organizations/
	rm -rf fabric-ca
	ls -la 
	exit

	cd 2.ca
	kubectl apply -f .
	
6/ deploy certificates
	cd ../3.certificates
	kubectl apply -f .
	
7/ deploy artifacts
	cd ../4.artifacts
	kubectl apply -f .
	
8/ deploy orderer
	cd ../5.orderer
	kubectl apply -f .
	
9/ deploy peer - config map
	cd ../6.configmap
	kubectl apply -f .
	
	cd ../7.peers/
	kubectl apply -f match/


10/ create channel and join peer to channel
	
	from lens tool, filter pods by cli
	access shell of cli-peer0-match (can access by manual of not setup lens tool)
	
	execute:
	./scripts/createAppChannel.sh
	ls channel-artifacts/ --> to validate new channel block has been created
	peer channel join -b ./channel-artifacts/agmchannel.block
	
	to verify peer join channel or not
	peer channel list 
	
11/ update anchor peer
	from lens tool, filter pods by cli
	access shell of cli-peer0-match (can access by manual of not setup lens tool)
	
	./scripts/updateAnchorPeer.sh MatchMSP

12/ packaging chaincode
	ssh docker@172.18.32.73 password: tcuser
	cd /v1/chaincode/basic/packaging
	
	start with match
	tar cfz code.tar.gz connection.json --> this command with create code.tar.gz file from connection.json file
	tar cfz basic-match.tgz code.tar.gz metadata.json --> this command with create basic-org1.tgz file from these 2 files
	
	rm -rf code.tar.gz
	exit
13/ install chaincode
	from lens tool, filter pods by cli
	access shell of cli-peer0-match (can access by manual of not setup lens tool)
	
	cd /opt/gopath/src/github.com/chaincode/basic/packaging
	peer lifecycle chaincode install basic-match.tgz

	copy and save the chaincode package identifier of 3 orgs:
	basic:ec014eafe06242c72f43fdd2c13c069943dc9b99f381537bbc85b680d08ffa3e
	like: basic:1bbb296763656c3e8c13140aa09faf5a12bc1ea33d1f3400bf28cb8c4c9943bd
	
	go to docker hub and create new repository
	then 
	cd ../8.chaincode/basic
	docker build -t leminhy89/basic-chaincode-hlf:1.0 .
    docker image
    docker tag image_id leminhy89/basic-chaincode-hlf:1.0 
    docker push -t leminhy89/basic-chaincode-hlf:1.0 .
	cd ../../9.cc-deploy/basic
	update org1,2,3-chaincode-deployment.yaml ---->file with correct chaincodeID and image name
	
	kubectl apply -f .
	
	
14/ approve chaincode
	from lens tool, filter pods by cli
	access shell of cli-peer0-match (can access by manual of not setup lens tool)	
	peer lifecycle chaincode approveformyorg --channelID agmchannel --name basic --version 1.0 --init-required --package-id basic:ec014eafe06242c72f43fdd2c13c069943dc9b99f381537bbc85b680d08ffa3e --sequence 1 -o orderer:7050 --tls --cafile $ORDERER_CA
	
	please update package-id as same as your saved above
	
	run below command to check commit
	peer lifecycle chaincode checkcommitreadiness --channelID agmchannel --name basic --version 1.0 --init-required --sequence 1 -o orderer:7050 --tls --cafile $ORDERER_CA
	
	commit chaincode
	peer lifecycle chaincode commit -o orderer:7050 --channelID agmchannel --name basic --version 1.0 --sequence 1 --init-required --tls true --cafile $ORDERER_CA --peerAddresses peer0-match:7051 --tlsRootCertFiles /organizations/peerOrganizations/match.agm.com/peers/peer0.match.agm.com/tls/ca.crt

	verrify
	peer lifecycle chaincode querycommitted -C agmchannel
	
15/ invoke transaction
	from lens tool, filter pods by cli
	access shell of cli-peer0-org1 (can access by manual of not setup lens tool)
	
	invoke transaction
	create profile
	peer chaincode invoke -o orderer:7050 --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -C agmchannel -n basic --peerAddresses peer0-match:7051 --tlsRootCertFiles /organizations/peerOrganizations/match.agm.com/peers/peer0.match.agm.com/tls/ca.crt -c '{"function": "CreateProfile","Args":["profile_1","{\"username\":\"DungNT10\", \"idcardImageURL\":\"dung.com\", \"idcardNo1\":\"31101999\", \"idcardNo2\":\"3109\", \"fullname\":\"Nguyen Tan Dung\", \"gender\":\"Male\", \"birthdate\":\"31/10/1999\", \"address\":\"Da Nang\", \"hometown\":\"Thanh Hoa\", \"fingerprintCode\":\"code1\", \"cardCode\":\"code2\", \"email\":\"ntd31101999@gmail.com\"}"]}' --waitForEvent
	peer chaincode invoke -o orderer:7050 --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -C agmchannel -n basic --peerAddresses peer0-match:7051 --tlsRootCertFiles /organizations/peerOrganizations/match.agm.com/peers/peer0.match.agm.com/tls/ca.crt -c '{"function": "CreateProfile","Args":["profile_2","{\"username\":\"ThinhLDH1\", \"idcardImageURL\":\"thinh.com\", \"idcardNo1\":\"28042001\", \"idcardNo2\":\"2841\", \"fullname\":\"Le Duy Hoanh Thinh\", \"gender\":\"Male\", \"birthdate\":\"28/04/2001\", \"address\":\"Da Nang\", \"hometown\":\"Nghe An\", \"fingerprintCode\":\"code1\", \"cardCode\":\"code2\", \"email\":\"hoangthinh1@gmail.com\"}"]}'
	peer chaincode invoke -o orderer:7050 --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -C agmchannel -n basic --peerAddresses peer0-match:7051 --tlsRootCertFiles /organizations/peerOrganizations/match.agm.com/peers/peer0.match.agm.com/tls/ca.crt -c '{"function": "CreateProfile","Args":["profile_3","{\"username\":\"QuangLV7\", \"idcardImageURL\":\"quang.com\", \"idcardNo1\":\"26022000\", \"idcardNo2\":\"2620\", \"fullname\":\"Le Van Quang\", \"gender\":\"Male\", \"birthdate\":\"26/02/2000\", \"address\":\"Da Nang\", \"hometown\":\"Quang Nam\", \"fingerprintCode\":\"code1\", \"cardCode\":\"code2\", \"email\":\"quanglathe@gmail.com\"}"]}'

	update profile
	peer chaincode invoke -o orderer:7050 --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -C agmchannel -n basic --peerAddresses peer0-match:7051 --tlsRootCertFiles /organizations/peerOrganizations/match.agm.com/peers/peer0.match.agm.com/tls/ca.crt -c '{"function": "UpdateMatch","Args":["match_1" , "profile_2", "Agree"]}' --waitForEvent
	
	create match
	peer chaincode invoke -o orderer:7050 --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -C agmchannel -n basic --peerAddresses peer0-match:7051 --tlsRootCertFiles /organizations/peerOrganizations/match.agm.com/peers/peer0.match.agm.com/tls/ca.crt -c '{"function": "CreateMatch","Args":["match_1" ,"{\"ownerProfileId\":\"profile_1\", \"matcherProfileId\":\"profile_2\", \"matchingLocation\":\"FSOFT\"}"]}' --waitForEvent

	accept match 
	peer chaincode invoke -o orderer:7050 --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -C agmchannel -n basic --peerAddresses peer0-match:7051 --tlsRootCertFiles /organizations/peerOrganizations/match.agm.com/peers/peer0.match.agm.com/tls/ca.crt -c '{"function": "AcceptMatch","Args":["match_1" , "profile_3"]}' --waitForEvent

	get History
	peer chaincode query -C agmchannel -n basic -c '{"function": "GetHistoryForAsset","Args":["profile_1"]}'
	peer chaincode query -C agmchannel -n basic -c '{"function": "GetHistoryForAsset","Args":["match_1"]}'

	get profile by id
	peer chaincode query -C agmchannel -n basic -c '{"function": "GetProfileById","Args":["profile_3"]}'


	get all match by owner
	peer chaincode query -C agmchannel -n basic -c '{"function": "GetMatchByOwner","Args":["profile_1"]}'

	get all match by matcher
	peer chaincode query -C agmchannel -n basic -c '{"function": "GetMatchByMatcher","Args":["profile_2"]}'
16/ Access couchdbs
	kubectl port-forward services/peer0-match 5984:5984	
	open browser to check: http://127.0.0.1:5984/_utils/
	
	
17/	Create connection profile
	ssh docker@172.18.32.73 password: tcuser
	cd /v1
	./scripts/ccp.sh
	ls -la connection-profile
	exit
	
18/ Override Fabric CA default configuration
	cd 10.api/k8
	kubectl apply -f configmap.yaml
	
19/ create nodejs application docker and update to 10.api/k8/api.yaml file
20/ starting api server
	cd /10.api/k8
	kubectl apply -f api.yaml
	
	port service to test
	kubectl port-forward services/api 4000
	
21/ cd 11.frontend	
	kubectl apply -f frontend.yaml
	
22/ creating hyperledger explorer
	ssh docker@172.18.32.73 password: tcuser
	cd /v1/organizations/peerOrganizations/match.agm.com
	sudo chown -R docker:docker ./users
	cd /v1/organizations/peerOrganizations/match.agm.com/users/Admin\@match.agm.com/msp/keystore/
	ls -> get the private key
	cp private_key priv_sk
	ex: cp 3d8e5d8f0b609c99d3c0380e64375464f9928f288a388a4ae886ef00384424cc_sk priv_sk
	
	exit

23/ start hyperledger explorer
	cd ../12.explorer
	kubectl apply -f configmap.yaml
	kubectl apply -f explorerdb.yaml
	kubectl apply -f explorer.yaml
	
	kubectl port-forward services/explorer 8080
	open http://127.0.0.1:8080 to view the explorer	